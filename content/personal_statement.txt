* What are your interests?
Recently I have been most interested in computing, which is a vast topic.
I suppose I developed an interest in computers when I learned about
GNU\Linux. My Windows 7 PC had crashed during finals week one semester in
college. When I went to purchase a new PC, Microsoft was shoving their
Windows 8 garbage down everyone's throats. I purchased one begrugdingly,
because I'll damned if I was ever going to purchase an Apple product. I
hated Windows 8 so much, and I hated the fact that there were no other
options commercially available at the time. There was no freedom. Then I
found Linux. I fell in love with the idea that YOU should be the real
owner of your machine. If it does something you don't like, you should be
able to hack it. It was a trade-off though, because I didn't know
anything about bash, not to mention disk partitioning, BIOS, and FHS.
I'll admit that I started with an Ubuntu distribution. I think they were
on 14 then.

I slowly learned enough to be the admin on my PC, but I didn't study it
much more beyond that because I had to spend all my energy reading
Greek and Latin and Philosophy. In graduate school, I learned about R and
SQL. I never studied programming. I studied education and social science
research methods. So in my statistics courses, I sought an alternative to
SPSS and SAS, which I couldn't afford. And in my assistantship, I learned
about Microsoft Access which we used to manage some of our data and feed
reports in Excel. I thought the relational algebra was so cool. It
allowed me to apply the Logic and Set Theory I learned in my Philosophy
program, which made me happy. At my core, I'm a philosopher. Moreover,
the data and statistics was in English so I didn't have to spend hours
translating. That was the part about Classics that pushed me away. I felt
like the end result wasn't worth the effort. I wanted to get to the core
concepts and engage in an analytical dialogue with the texts. I wanted to
do the philosophy. The language is just a vector for the meaningful bits.

After I graduated with my master's degree, I got a job at this higher
education research company who did survey administration, reporting, and
retention analytics. Even though I had no formal statistical training or
mathematics beyond differential calculus or computer science coursework,
my new boss valued my subject matter expertise and general analytical
ability. I think she believed that I could develop the technical skills
easily, and I did. Unfortunately, this strategy does have it's problems.
Sure, I can learn to program, but I can't predict how a script,
procedure, or application will behave at scale, which is a real-world
technical problem. To handle and manage big data, you really should get
a data scientist who has had advanced training in things like parallel
computing, distributed data storage, and code optimization and debugging.
There's really no substitute; you can learn Python by reading the
tutorial and the documentation for scientific computing packages, but
you can't learn multivariable calculus in a month or advanced algebra.

So even though I felt like I was under-qualified I took the job because I
needed it. I learned a lot, and I learned it very quickly. Within 3
months I had completely recoded our algorithm for evaluating a student's
retention risk and improved it's performance by 90%. Processes that once
took hours, are now finished in a few minutes.

I enjoyed solving that problem and learning the language. Python is
really cool because you can use it for almost anything. We were just
using for statistics, but it has libraries for building desktop
applications, it has web frameworks, database APIs, command line apps,
and generally anything else you can think of. So then I got really into
computers. I bought a copy of K&R. I started to use Emacs, and picked up
a little Lisp. Then I learned about markup languages and markdown.
I was working at a web development company so I also learned some CSS and
JavaScript. The JavaScript, it turned out, is also used in a lot of
data visualization libraries. The Bokeh library in Python is mostly for
server-side apps, but if you know the JavaScript then you can write
custom callbacks and then embed the viz in a static site.

So I like computers, but I still love philosophy more. Education is still
my passion. We must philosophize about something, direct our analysis
toward some object, and education seems the most worthy to me of that
effort. If we can get it right, then a lot of other things ought to
follow naturally--decreased crime, increased voter turnout, decreased
wealth inequality, the list goes on. My thoughts can get big pretty
quickly because I'm fascinated with systems and it is easy for me to get
lost in a rabbit-hole (like in undergrad when I got so absorbed in Plato
that I had to learn Greek too and spent 5 years of my life on it, for the
record it was totally worth it). 


* What are your long-term goals/aspirations?
Given everything I just wrote, I'd like to stay somewhere in the
technical/research side of education. The philosophy is what matters to
me, the patterns of reasoning, lines of thought. The quantitative
research is just a tool, but it is one that should be used cautiously
and appropriately. There's a lot of nonsense happening with numbers
because people don't respect math. If there's anyone who should have
respect for math outside a math department, it's the philosophers and
the engineers. That said, I really need to revisit mathematics and get
myself up to speed on the calculus and the algebra. If possible, I'd like
to visit the computer science side too. That way I have a better idea
of how a particular implementation of an algorithm will perform in a
context. The statistics is part of the math.

I'd also like to keep learning about computers and how the software we
use everyday actually works. I'm generally interested, I think, in all
that stuff because everything that happens in the virtual world is the
result of a system of logical procedures. The language is also fun. For
example, the technical term for turning on a computer is "booting up".
It's as if the computer is actually strapping itself into a pair of boots
to go to work in the morning. In data science, there are data frame
operations known as "melting" and "casting". It's like the researcher
is a blacksmith forging iron into it's desired form, and sometimes it
actually feels like that's what you're doing. 


* Personal history without being too personal(i.e. background)?
I'm a southerner at heart. Not a bigot or a racist, just a southerner. I
love the heat, the beach, the water, and the food. Shrimp & grits, pulled
pork barbecue, collard greens... Goddamn I can eat some greens. Don't
fuck with my biscuits and gravy, and if it ain't sweet then it ain't tea.
So don't even call it that.
